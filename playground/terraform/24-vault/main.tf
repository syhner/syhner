# vault server -dev -dev-root-token-id="education" -dev-tls — start a Vault server in development mode
# log in to the vault address with the root token

# CONFIGURE AWS SECRETS ENGINE IN VAULT
# cd vault-admin-workspace
# export TF_VAR_aws_access_key=$(aws configure get aws_access_key_id)
# export TF_VAR_aws_secret_key=$(aws configure get aws_secret_access_key)
# export VAULT_ADDR=https://127.0.0.1:8200
# export VAULT_TOKEN=education
# terraform init
# terraform apply — two output variables named backend and role. server log [INFO]  core: successful mount: namespace="" path=dynamic-aws-creds-vault-admin-path/ type=aws version=""

# PROVISION COMPUTE INSTANCE
# cd ../operator-workspace
# Recommended to use provider-specific data sources when convenient. terraform_remote_state is more flexible, but requires access to the whole Terraform state.
# terraform init
# terraform apply — plan or apply should create a short lived IAM role called vault-token-terraform-dynamic-aws-creds-vault-admin
# refresh IAM to see the role
# This IAM user was generated by Vault with the appropriate IAM policy configured by the Vault Admin workspace. Because the default_lease_ttl_seconds is set to 120 seconds, Vault will revoke those IAM credentials and they will be removed from the AWS IAM console after 120 seconds.
# The token is generated from the moment the configuration retrieves the temporary AWS credentials (on terraform plan or terraform apply). If the apply run is confirmed after the 120 seconds, the run will fail because the credentials used to initialize the Terraform AWS provider has expired. For these instances or large multi-resource configurations, you may need to adjust the default_lease_ttl_seconds.
# should be an EC2 instance provisioned with the IAM role
# Every Terraform run with this configuration will use its own unique set of AWS IAM credentials that are scoped to whatever the Vault Admin has defined.
# The Terraform Operator doesn't have to manage long-lived AWS credentials locally. The Vault Admin only has to manage the Vault role rather than numerous, multi-scoped, long-lived AWS credentials.
# After 120s in server log should see [INFO] expiration: revoked lease: lease_id=dynamic-aws-creds-vault-admin-path/creds/dynamic-aws-creds-vault-admin-role/z1PKR7Y623fk0ZQWW1kwaVVY
# terraform destroy

# RESTRICT VAULT ROLE'S PERMISSIONS
# cd ../vault-admin-workspace
# sed -i '' -e 's/, \"ec2:\*\"//g' main.tf — Remove "ec2:*" from the vault_aws_secret_backend_role.admin resource in your main.tf file.
# terraform apply
# cd ../operator-workspace
# terraform plan — Error: UnauthorizedOperation: You are not authorized to perform this operation

# CLEAN UP
# terraform destroy --auto-approve && cd ../vault-admin-workspace && terraform destroy --auto-approve
